import React from 'react'
import { withRouter,Link } from 'react-router-dom';
import LeftSiderBar from '../SideBar/LeftSider/LeftSider'
import categorybanner from '../../images/category-banner.jpg'
import ReactPaginate from 'react-paginate';
//import ReactPaginate from 'react-paginate';
class Category extends React.Component {
    constructor() {
        super();
        this.state = {
            categorydata: null,
			offset: 0,
            tableData: [],
            orgtableData: [],
            perPage: 8,
            currentPage: 0,
			 books: [],
			 allTimeInfo:null
        }
		this.handlePageClick = this.handlePageClick.bind(this);
    }
	
	  handlePageClick = (e) => {
        const selectedPage = e.selected;
        const offset = selectedPage * this.state.perPage;

        this.setState({
            currentPage: selectedPage,
            offset: offset
        }, () => {
            this.loadMoreData()
        });

    };
	
	
    loadMoreData() {
        const data = this.state.orgtableData;

        const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)
        this.setState({
            pageCount: Math.ceil(data.length / this.state.perPage),
            tableData: slice
        })
    }
	
   /*  componentDidMount() {
        fetch('https://dev.demo-swapithub.com/ecomm/api/categories/')
            .then((res) => {
                return res.json();
                // Response.json().then((result) => {
                //     console.log('categor: ', result.data)
                //     this.setState({ users: result.data })
                // })
            })
            .then(categorydata => {
                console.log('users: ', categorydata)
				  var data = categorydata;
                var slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)
                this.setState({
                    pageCount: Math.ceil(data.length / this.state.perPage),
                    orgtableData: categorydata,
                    tableData: slice
                })
				
                //this.setState({ users })
				
				
				
				
            })
            .catch(err => {
                console.log('Category api ERR: ', err);
            }) */
		
		componentDidMount(){
        Promise.all([
            fetch('https://dev.demo-swapithub.com/ecomm/api/categories/'),
            fetch('https://dev.demo-swapithub.com/ecomm/api/get-page/category')
        ])
        .then(([res, res2]) => Promise.all([res.json(), res2.json()]))
		.then(([data1, data2]) => {
		var data = data1;
		var pageContent = data2.content
		var pagetitle = data2.title
		var pageImage = data2.image
		console.log('pageConten',pageContent);
		var slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)
		this.setState({
			 pageCount: Math.ceil(data.length / this.state.perPage),
             orgtableData: data1,
             tableData: slice,
            
			
             data2 :pageContent,
			 pageTitle : pagetitle,
			 pageimage :pageImage
        })
		}
		);
    }	



	/* 	
			fetch('https://dev.demo-swapithub.com/ecomm/api/get-page/category')
        .then((response) => response.json())
        .then(booksList => {
            this.setState({ books: booksList });
        });
    } */

    goToCategory = (item) => {
        const { history } = this.props;
        history.push(`/CategoryPage/${item.alias}`, { catId: item.id, catname: item.name})
		//history.push({ catname: item.name })
    }
	
	/*  componentDidMount() {
        
    } */
 
    render() {
		//const sadasd = { alltimeInfo }
		const { data2,pageTitle,pageimage } = this.state;
		
        return (
            <div className="category-main row m-0 p-0 ">
                <LeftSiderBar />
                <div className="col-md-10 width_int category-col"> 
				<p></p>
                    <div className='banner-sect-category' style={{background: `url(${'https://dev.demo-swapithub.com/ecomm'+ pageimage})`,}}>
                        <div className="breadcrumb"><Link to="/" >Home </Link> <span> > </span> {pageTitle}</div>
                        <h2 className="cat-title">{pageTitle}</h2>
						<p className="content-category" 
                         dangerouslySetInnerHTML={{ __html: data2 }}></p>
                    </div>
                    <div className="row category">
                        {
                            this.state.tableData ?
                                this.state.tableData.map((item
                                    // , current_page
                                ) =>
                                    <div className="col-6 col-md-4 col-xl-3 mt-3 category-listing">
                                        <div className="category-shop">
                                        <button onClick={() => this.goToCategory(item)}>
                                            <div className="card text-black featured_Products">
											     <div className="card-body">
                                                    <div className="text-center">
                                                        <h5 className="card-title">{item.name}</h5>
                                                    </div>
                                                </div>
                                                <div className='featured_Products_image'>
                                                    <img src={'https://dev.demo-swapithub.com/ecomm/' + item.image} alt={item.name} />
                                                    
                                                </div>
                                               
                                                {/* <div className='shop_price'>
                                            <span >${item.price}</span>
                                        </div> */}
                                            </div></button>
                                                </div>
                                    </div>
                                )
                                :
                                null
                        }
                    </div>
					<ReactPaginate
                    previousLabel={<i class="fa fa-angle-left"></i>}
                    nextLabel={<i class="fa fa-angle-right"></i>}
                    breakLabel={"..."}
                    breakClassName={"break-me"}
                    pageCount={this.state.pageCount}
                    marginPagesDisplayed={2}
                    pageRangeDisplayed={5}
                    onPageChange={this.handlePageClick}
                    containerClassName={"pagination"}
                    subContainerClassName={"pages pagination"}
                    activeClassName={"active"} />
                </div>
				
            </div>
            
        );
    }
}
export default withRouter(Category);
